library(haven)
dataset <- read_stata(NULL)
View(dataset)
rm(list=ls())
install.packages("tidyverse")
library()
install.packages("rebus")
library(lubridate)
install.packages("lubridate")
install.packages("lubridate")
url<- https://www.imdb.com/chart/boxoffice/?ref_=nv_ch_cht
url<- 'https://www.imdb.com/chart/boxoffice/?ref_=nv_ch_cht'
library(rvest)
url<- "https://www.amazon.com/s?k=controller&ref=nb_sb_noss_2"
get_last_page<-function(html){
pages_data<-html%>%
html_nodes('.a-disabled')%>%
html_text()
pages_data[length(pages_data)-1]%>%
uname()%>%
as.numeric()
}
first_page<- read_html(url)
first_page
(latest_page_number <- get_last_page(first_page))
first_page <- read_html(url)
(latest_page_number <- get_last_page(first_page))
latest_page_number <- get_last_page(first_page)
(latest_page_number <- get_last_page(first_page))
get_last_page()
get_last_page(url)
rm(list=ls())
source('~/New/binarysearch.R')
a<- sort(as.integer(runif(150,1,200)))
a
binarysearch(a,1,150,50)
binarysearch(a,1,150,188)
binarysearch(a,1,150,18)
binarysearch(a,1,150,2)
rm(list = ls())
clear()
data("Titanic")
Titanic
?gsub
source('~/New/FibonnaciSeries.R')
source('~/New/FibonnaciSeries.R')
source('~/New/frequencyvowel.R')
source('~/New/FibonnaciSeries.R')
source('~/New/FibonnaciSeries.R')
source('~/New/FibonnaciSeries.R')
source('~/New/FibonnaciSeries.R')
source('~/New/FibonnaciSeries.R')
source('~/New/FibonnaciSeries.R')
fibnac(4)
fibnac(-1)
fibnac(7)
?strsplit
source('~/New/frequencyvowel.R')
freqvow(a)
source('~/New/frequencyvowel.R')
freqvow(a)
source('~/New/frequencyvowel.R')
freqvow(a)
source('~/New/frequencyvowel.R')
freqvow(a)
source('~/New/FibonnaciSeries.R')
freqvow(a)
fibnac(6)
source('~/New/FibonnaciSeries.R')
fibnac(6)
source('~/New/FibonnaciSeries.R')
fibnac(80)
fibnac(35)
source('~/New/FibonnaciSeries.R')
fibnac(40)
source('~/New/FibonnaciSeriesCus.R')
source('~/New/FibonnaciSeriesCus.R')
fibnac(40)
source('~/New/FibonnaciSeries.R')
source('~/New/FibonnaciSeriesCus.R')
source('~/New/FibonnaciSeriesCus.R')
source('~/New/FibonnaciSeriesCus.R')
source('~/New/FibonnaciSeries.R')
fibnac(40)
source('~/New/FibonnaciSeriesCus.R')
source('~/New/FibonnaciSeries.R')
fibnac(40)
rm(list=ls())
library(tidyverse)
library(rvest)
library(stringr)
library(rebus)
library(lubridate)
url<- 'https://www.amazon.in/b?node=17408713031&pf_rd_p=9308b516-3dc9-473e-97ea-f48b705332cd&pf_rd_r=MFCH5CZ2XSA1TSH1T7Q6'
?page=n
get_last_page<-function(html){
pages_data<-html %>%
html_nodes('.pagnLink')%>%
html_text()
pages_data[length(pages_data)-1]%>%
unname()%>%
as.numeric()
}
first_page <- read_html(url)
first_page
first_page <- read_html(url)
(latest_page_number <- get_last_page(first_page))
list_of_pages <- str_c(url,'?page=', 1:latest_page_number)
list_of_pages
getTaskCallbackNames()
get_names_headphones<- function(html){
html%>%
html_nodes('.a-link-normal a-text-normal')%>%
html_text()%>%
str_trim()%>%
unlist()
}
source('~/New/FibonnaciSeriesCus.R')
fibnac(40)
source('~/New/FibonnaciSeries.R')
fibnac(20)
fibnac(10)
source('~/New/decimaltobinary.R')
source('~/New/decimaltobinary.R')
decbin(10)
rm(list=ls())
a<-as.integer(runif(10,1,100))
b<-write.table(a,file="Source.txt",sep="\t")
b
b<-write.table(a,file="Source.txt",sep="\t",row.names = FALSE)
b<-write.table(a,file="Source.txt",sep="\t",row.names = FALSE,col.names = FALSE)
for(i in 1:length(a)){
if(a[i]%%2==0){
write.table(a,file="Even.txt",sep="\t",row.names = FALSE, col.names = FALSE)
} else{
write.table(a,file="Odd.txt",sep="\t",row.names=FALSE, col.names = FALSE)
}
}
i
for(i in 1:length(a)){
if(a[i]%%2==0){
write.table(a[i],file="Even.txt",sep="\t",row.names = FALSE, col.names = FALSE)
} else{
write.table(a[i],file="Odd.txt",sep="\t",row.names=FALSE, col.names = FALSE)
}
}
for(i in 1:length(a)){
if(a[i]%%2==0){
b<-a[i]
} else{
c<-a[i]
}
}
b
c
for(i in 1:length(a)){
if(a[i]%%2==0){
write.table(a[i],file="Even.txt",sep="\t",row.names = FALSE, col.names = FALSE,append=TRUE)
} else{
write.table(a[i],file="Odd.txt",sep="\t",row.names=FALSE, col.names = FALSE,apped=TRUE)
}
}
for(i in 1:length(a)){
if(a[i]%%2==0){
write.table(a[i],file="Even.txt",sep="\t",row.names = FALSE, col.names = FALSE,append=TRUE)
} else{
write.table(a[i],file="Odd.txt",sep="\t",row.names=FALSE, col.names = FALSE,append=TRUE)
}
}
for(i in 1:length(a)){
if(a[i]%%2==0){
write.table(a[i],file="Even.txt",sep="\t",row.names = FALSE, col.names = FALSE,append=TRUE)
} else{
write.table(a[i],file="Odd.txt",sep="\t",row.names=FALSE, col.names = FALSE,append=TRUE)
}
}
source('~/New/filter.R')
source('~/New/filter.R')
source('~/New/filter.R')
source('~/New/filter.R')
source('~/New/filter.R')
source('~/New/filter.R')
source('~/New/filter.R')
source('~/New/filter.R')
source('~/New/filter.R')
source('~/New/filter.R')
source('~/New/filter.R')
source('~/New/filter.R')
source('~/New/filter.R')
source('~/New/filter.R')
a<-read.table("Source.txt")
a
a[2,]
source('~/New/filter.R')
a
str(a)
a<-write.table
a<-as.integer(runif(1000,1,2000))
write.table(a,file="Source.txt",sep="\t",row.names = FALSE, col.names = FALSE)
source('~/New/filter.R')
source('~/New/binaryiterative.R')
binary(8)
binary(0)
binary(2)
source('~/New/binaryiterative.R')
binary(8)
source('~/New/binaryiterative.R')
binary(2)
binary(8)
source('~/New/binaryiterative.R')
binary(2)
source('~/New/binaryiterative.R')
binary(8)
source('~/New/binaryiterative.R')
binary(8)
source('~/New/binaryiterative.R')
binary(8)
source('~/New/binaryiterative.R')
binary(8)
help(reverse)
?rev
rev(binary(8))
x=binary(8)
?cat
cat(1,2,3)
x=binary(8)
source('~/New/binaryiterative.R')
x=binary(8)
source('~/New/binaryiterative.R')
x=binary(8)
source('~/New/binaryiterative.R')
x=binary(8)
source('~/New/binaryiterative.R')
source('~/New/binaryiterative.R')
binary(8)
source('~/New/binaryiterative.R')
binary(8)
source('~/New/binaryiterative.R')
binary(8)
source('~/New/binaryiterative.R')
binary(8)
source('~/New/binaryiterative.R')
binary(8)
source('~/New/binaryiterative.R')
binary(8)
source('~/New/binaryiterative.R')
binary(8)
source('~/New/binaryiterative.R')
binary(8)
rm(list=ls())
a<-read.csv(file.choose())
view(a)
summary(a)
View(a)
View(a)
str(a)
a<- as.data.frame(a)
a
View(a)
View(a)
rm(list=ls())
a<- read.csv(file.choose())
b<- read.csv(teams_and_leagues)
b<- read.csv(teams_and_leagues,header=TRUE)
b<- read.csv("teams_and_leagues.csv",header=TRUE)
a
View(a)
view(a)
summary(a)
a[1,]
a[,2]
c = 5
c<- 5
d<- 5
c = c(1:5)
summary(a[,6])
summary(a[,4])
summary(a$Age)
summary(a[,6])
min(a$Age)
max(a$Age)
a<-as.data.frame(a)
max(a$Age)
summary(a$Sex)
quantile(a$Fare)
?quantile
d<- as.integer(runif(1000,0,10000))
heads(d)
head(d)
head(d,5)
head(d,10)
tail(a)
tail(d)
d
summary(d)
plot(d)
plot(heads(d))
plot(head(d))
plot(d)
plot(d,col="blue")
plot(d,col="pink")
plot(d,type="o",col="pink")
plot(c,type="o",col="pink")
plot(c,type="p",col="pink")
plot(c,type="p",col="red")
plot(c,type="b",col="red")
plot(c,type="l",col="red")
plot(c,type="c",col="red")
plot(c,type="n",col="red")
plot(d,type="n",col="red")
c<-as.integer(runif(100,10,300))
d<-as.integer(runif(10,10,100))
plot(d,type="o",col="red")
d<-as.integer(runif(50,10,100))
plot(d,type="o",col="red")
plot(c,type="o",col="blue")
max(c)
plot(c,type="o",col="blue",ylim=c(0,150))
plot(c,type="o",col="blue"
)
plot(c,type="o",col="blue",ylim=c(0,150))
plot(c,type="o",col="blue"
)
lines(d,type="o",col="red")
title(main="c vs d", col.main="blue", font.main=6)
title(r="c vs d", col.r="blue", font.r=6)
?title
plot(c,type="o",col="blue",ylim=c(0,150))
lines(d,type="o",col="red",pch=22,lty=2)
lines(d,type="o",col="red",pch=22,lty=1)
lines(d,type="o",col="red",pch=22,lty=0)
lines(d,type="o",col="red",pch=22,lty=5)
lines(d,type="o",col="red",pch=22,lty=9)
?title
plot(y,sin(y))
plot(x,sin(x))
plot(x,sin(x),type="1")
plot(c,sin(c),type="1")
x<-c(1:5)
plot(c,sin(c),type="1")
plot(x,sin(x),type="1")
plot(x,sin(x),type="l")
rm(x)
plot(x,sin(x),type="l")
plot(x, sin(x), main="The Sine Function", ylab="sin(x)", type="l", col="blue")
plot(sin(x), main="The Sine Function", ylab="sin(x)", type="l", col="blue")
plot(sin(x))
sin(x)
?sin(x)
plot(sinpi(x))
x<- seq(-pi,+pi,0.1)
plot(sin(x))
?seq
x<- seq(-2pi,+2pi,0.1)
2pi
2*pi
x<- seq(-2*pi,+2*pi,0.1)
plot(sin(x))
plot(x,sin(x))
c<-seq(1,100,4)
c
plot(x,sin(x))
plot(sin(x))
plot(x,sin(x))
plot(x,sin(x),type="l",col="pink")
plot(x,sin(x),main="The Sine Function",type="l",col="pink")
plot(x,sin(x),main="The Sine Function",type="l",col="pink",col.main="Blue")
lines(x,cos(x),col="red")
lines(x,cos(x),col="blue")
plot(a$Age,a$Sex)
View(b)
View(b)
e<-read.csv(file.choose())
View(e)
View(e)
plot(e$age,e$weight_kg)
plot(e$age[30:100],e$weight_kg[30:100])
plot(e$age[30:100],e$weight_kg[30:100],xlab="Age",ylab="Weight")
plot(e$age[30:100],e$weight_kg[30:100],xlab="Age",ylab="Weight",col.xlab="Blue")
plot(e$age[30:100],e$weight_kg[30:100],main="gggg",xlab="Age",ylab="Weight",col.main="Blue")
plot(0:25)
plot(0:25,rep(1,26),pch=0:25, cex=2)
?rep
hist(e$age)
hist(e$age,e$height_cm)
hist(e$age,e$weight_kg)
hist(e$age,break=20)
hist(e$age,breaks =20)
hist(e$age,breaks =5)
boxplot(e$age,e$height_cm)
boxplot(e$age)
pie(e$age)
pie(e$weight_kg,col=rainbow(length(e$weight_kg)))
pie(e$weight_kg[1:50])
max(e)
max(e$age)
rm(list=ls())
fifa20<- read.csv(file.choose())
tandl<- read.csv(file.choose())
library()
library(ggplot2)
View(tandl)
View(tandl)
View(fifa20)
View(fifa20)
world_map<-map_data("world")
world_map<-map_data("world")
ggplot(world_map,aes(x=long,y=lat, group=group))+geom_polygon(fill="lightgray",colour="white")
require(maps)
fifa20$player_url[1,]
fifa20[1,]
View(fifa20[1,])
url<- url(fifa20[1,2])
fifa20[1,2]
fifa20[1,]
fifa20[1]
fifa20[1,2]
fifa20$player_url[2]
str(fifa20)
fifa20<-as.data.frame(fifa20)
browseURL(fifa20$player_url[1])
str()
str(fifa20)
url<- url(fifa20$player_url[1])
browseURL("https://sofifa.com/player/158023/lionel-messi/20/159586")
source('~/New/browseURLfromtable.R')
urltab(fifa20$player_url[1])
urltab(fifa20$player_url[2])
source('~/New/browseURLfromtable.R')
urltab(fifa20$player_url[2])
source('~/New/browseURLfromtable.R')
urltab(fifa20$player_url[2])
source('~/New/browseURLfromtable.R')
urltab(fifa20$player_url[2])
fifa20$long_name[2]
fifa20$long_name<-as.character(fifa20$long_name)
fifa20$long_name[2]
str(fifa20)
max(fifa20$long_name)
max(fifa20$age)
is.NA(fifa20$age)
is.na(fifa20$age)
is.na(fifa20$weight_kg)
is.na(fifa20$potential)
is.na(fifa20$cb)
is.na(fifa20$nation_jersey_number)
sum(is.na(fifa20$nation_jersey_number))
nrow(is.na(fifa20$nation_jersey_number))
na.omit(fifa20[1,])
na.omit(fifa20)
a<na.omit(fifa20)
a<- na.omit(fifa20)
a
summary(fifa20$nation_jersey_number)
max(fifa20$nation_jersey_number,trim=NA)
max(fifa20$nation_jersey_number,trim="NA")
max(fifa20$nation_jersey_number)
?trim
max(as.integer(fifa20$nation_jersey_number))
max(as.integer(fifa20$nation_jersey_number),trim=NA)
max(as.integer(fifa20$nation_jersey_number),trim="NA")
max(as.integer(fifa20$nation_jersey_number),trim=="NA")
max(as.integer(fifa20$nation_jersey_number),trim="NA")
max(as.integer(fifa20$nation_jersey_number),ignore.value=NA)
max(as.integer(fifa20$nation_jersey_number),ignore.value="NA")
max(as.integer(fifa20$nation_jersey_number),ignore.integer=NA)
?ignore
max(as.integer(fifa20$nation_jersey_number),rm.NA=TRUE)
max(as.integer(fifa20$nation_jersey_number),rm.na=TRUE)
str(fifa20)
max(as.integer(fifa20$pace),rm.na=TRUE)
?max
max(as.integer(fifa20$pace),na.rm=TRUE)
?cat
install.packages("maps")
library(maps)
world_map <- map_data("world")
ggplot(world_map, aes(x = long, y = lat, group = group)) +
geom_polygon(fill="lightgray", colour = "white")
ggplot(some.eu.maps, aes(x = long, y = lat)) +
geom_polygon(aes( group = group, fill = region))+
geom_text(aes(label = region), data = region.lab.data,  size = 3, hjust = 0.5)+
scale_fill_viridis_d()+
theme_void()+
theme(legend.position = "none")
ggplot(as.character(fifa20$nationality), aes(x = long, y = lat)) +
geom_polygon(aes( group = group, fill = region))+
geom_text(aes(label = region), data = region.lab.data,  size = 3, hjust = 0.5)+
scale_fill_viridis_d()+
theme_void()+
theme(legend.position = "none")
b<-commandArgs(trailingOnly = TRUE)
write.table(as.integer((runif(1000,0,10000))),file="hhh.txt")
write.table(as.integer((runif(1000,0,10000))),file="hhh.txt",col.names = FALSE)
write.table(as.integer((runif(1000,0,10000))),file="hhh.txt",col.names = FALSE, row.names=FALSE)
write.table(as.integer((runif(1000,0,10000))),file="hhh.txt",col.names = FALSE, row.names=FALSE)
rm()
rm(b)
rm(a)
data(mtcars)
mtcars
mean(mtcars$mpg)
data("iris")
iris
View(iris)
unique(iris$Species)
help(package="devtools")
devtools
install.packages(c("broom", "cli", "crosstalk", "dendextend", "digest", "dplyr", "forcats", "fs", "ggplot2", "glue", "gplots", "lifecycle", "modelr", "plyr", "ps", "rlang", "shiny", "stringi", "tinytex", "vcd", "vctrs", "xml2"))
sessionInfo()
version()
versions()
